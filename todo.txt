- continue to create interfaces for data from stats-API
^^>> specifically all the different types from using modifiers on team & game api calls

- add base type with copyright property
- change date properties from string to date?

- utilize shared module

- fix tests after adding data sources service

update README:
 - make docker commands comment blocks like the rest of the readme
 - get graphql logo alongside nestjs logo
 - provide an example query

implement:
 - formatGqlError handler method
 - validateRequiredEnvironmentVars
 - environment types file
 - configuration strategy
 - heroku specific postinstall to upload sentry sourcemaps

- find a way to implement subscriptions with live feed updates
^> possibly have local open-faas functions query for new data on games and invoke a mutation to trigger subscription
* requires testing once season starts again

Remaining Logical Modules:
- people (aka player) (finish)
- schedule
- standings (add to team module?)
  - standing types
- draft
- stats
  - stat types
  - team stats
- game (finish)
  - game types
  - game status
  - play types?
  - live feed (+ time ranges)
    - box score
    - linescore
    - content
- roster? (if used in multiple schema stitches)


- error links:
 - https://github.com/apollographql/apollo-server/issues/3858
